"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.initGenerator = void 0;
const devkit_1 = require("@nx/devkit");
const jest_1 = require("@nx/jest");
const js_1 = require("@nx/js");
const versions_1 = require("../../utils/versions");
function updateDependencies(tree) {
    (0, devkit_1.removeDependenciesFromPackageJson)(tree, ['@nx/node'], []);
    return (0, devkit_1.addDependenciesToPackageJson)(tree, {
        tslib: versions_1.tslibVersion,
    }, { '@nx/node': versions_1.nxVersion, '@types/node': versions_1.typesNodeVersion });
}
function normalizeOptions(schema) {
    return {
        ...schema,
        unitTestRunner: schema.unitTestRunner ?? 'jest',
    };
}
async function initGenerator(tree, schema) {
    const options = normalizeOptions(schema);
    const tasks = [];
    tasks.push(await (0, js_1.initGenerator)(tree, {
        ...schema,
        tsConfigName: schema.rootProject ? 'tsconfig.json' : 'tsconfig.base.json',
        skipFormat: true,
    }));
    if (options.unitTestRunner === 'jest') {
        tasks.push(await (0, jest_1.jestInitGenerator)(tree, { ...schema, testEnvironment: 'node' }));
    }
    tasks.push(updateDependencies(tree));
    if (!options.skipFormat) {
        await (0, devkit_1.formatFiles)(tree);
    }
    return (0, devkit_1.runTasksInSerial)(...tasks);
}
exports.initGenerator = initGenerator;
exports.default = initGenerator;
